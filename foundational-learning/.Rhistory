1+1
1+1
2+3
3*82
2*3
print("hello, R!  ")
print("hello, R!  ")
c
print("hello, R!")
murders %>%
ggplot(aes(population, total, label=abb, color=region)) +
geom_label()
murders %>%
ggplot(aes(population, total, label=abb, color=region)) +
geom_label()
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
murders %>%
ggplot(aes(population, total, label=abb, color=region)) +
geom_label()
View(murders)
print("hello, R!")
print("hello, R!")
source("D:/MY_EARTH/Z-code/Data-Science/test.r")
ls()
a
a<1
b<1
c<1
a<-1
b<-1
c<-1
c <- -1
ls()
(-b+sqrt(b^2 - 4*a*c))/2*a
(-b - sqrt(b^2 - 4*a*c))/2*a
log()
log(1)
log(exp(1))
?log
help("+")
murders %>%
ggplot(aes(population, total, label=abb, color=region))
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
geom_label()
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
geom_label()
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
source("D:/MY_EARTH/Z-code/Data-Science/first-r-script.R")
geom_label()  # nolint
v <- c(2,4,6,9)
t <- c(1,4,7,9)
print(v>t)
print(v < t)
print(v == t)
print(v!=t)
print(v>=t)
print(v<=t)
print(1:10)
a=c(3,4)
b=c(5,0)
a+b
c=c(3,3,4)
b+c
a[2]
t[2:4]
x <- 50L
if(is.integer(x)) {
print("X 是一个整数")
}
x <- 50L
if(is.integer(x)) {
print("X 是一个整数")
}
View(murders)
View(murders)
View(murders)
View(murders)
View(murders)
View(murders)
View(murders)
x <- 50
if(is.integer(x)) {
print("X 是一个整数")
}
x <- 50
if(is.integer(x)) {
print("X 是一个整数")
}
x <- 50L
if(is.integer(x)) {
print("X 是一个整数")
}
x = 50L
if(is.integer(x)) {
print("X 是一个整数")
}
x = 50S
if(is.integer(x)) {
print("X 是一个整数")
}
x <- c("google","runoob","taobao")
if (runoob %in% x) {
print("包含 runoob")
} else {
print("不包含 runoob")
}
class(ls)
class(a)
class(x)
View(murders)
View(murders)
head(murders)
levels(murders$state)
levels(murders$region)
levels(murders$total)
class(murders$state)
class(muders$region)
class(murders$region)
class(murders$abb)
class(murders$population)
a=2
b=-1
c=-4
(-b+(sqrt(b^2-4*a*c))/2*a)
(-b-(sqrt(b^2-4*a*c))/2*a)
log2(1024)
log4(1024)
log(1024, base=4)
library(dslabs)
package(dslabs)
library(dslabs)
data(movielens)
source("D:/MY_EARTH/Z-code/Data-Science/movielens-dslabs.R")
data(movielens)
View(movielens)
class(movielens$title)
nlevels((movielens$genres))
source("D:/MY_EARTH/Z-code/Data-Science/plots-learning.R", encoding = 'UTF-8')
# 绘图
pie(info, labels=names, col=cols)
source("D:/MY_EARTH/Z-code/Data-Science/plots-learning.R", encoding = 'UTF-8')
# 绘图
pie(info, labels=names, col=cols)
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/Exercise 2. Variable type.R")
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/Exercise 2. Variable type.R")
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/Exercise 2. Variable type.R")
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/Exercise 2. Variable type.R")
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/Exercise 2. Variable type.R")
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/Exercise 2. Variable type.R")
head(heights)
head(heights)
head(heights)
head(heights)
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/chapter 1/Exercise 3. Numerical values.R", encoding = 'UTF-8')
length(unique(x)) #unique(x)输出这个dataset的全部不重复的数据 #length(X)输出x共有多少个数据
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/chapter 2/Exercise 1. Vector lengths.R")
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/chapter 2/Exercise 2. Percentiles.R")
quantile(heights$height, seq(.01, 0.99, 0.01))
source("D:/MY_EARTH/Z-code/Data-Science/2.Visualization/chapter 2/Exercise 2. Percentiles.R")
df
